2018年2月22日，星期四

1	栈，堆，全局，文字常量，代码区 总结
	(1) 栈区(stack)
		由编译器自动分配释放。空间由系统分配。
	(2)	堆区(heap)
		一般由程序员释放。空间由自己申请。
	(3)	全局区(静态区)(static)
		全局变量和静态变量的存储是放在一起的，初始化的全局变量和静态变量在一块区域，未初始化的在相邻的另一块区域，程序结束后由系统释放。
	(4) 文字常量区
	(5)	程序代码区

	int a = 0;  //全局初始化区
	char *p1;	//全局未初始化区
	main()
	{
		int b;	//栈
		char s[] = "abc";	//栈	是在编译是就确定的，速度快。
		char *p3 = "123456";	//123456在常量区，p3在栈上。是在运行时赋值的，没有堆快。
		static int c = 0;	//全局(静态)初始化区
		p1 = (char*)malloc(10);	//堆
		strcpy(p1,"123456");	//123456在常量区，所以编译器可能会把p1与p3所指向的"123456"优化成同一个地方。
	}
2	析构函数
3	浅拷贝和深拷贝
	浅拷贝只是对指针的拷贝，拷贝后两个指针指向同一个内存空间。
		调用析构函数时，会造成同一份资源析构两次，造成程序崩溃；
		两方指向同一块内存，任何一方的变动都会影响另一方；
		拷贝方原有内存不会被释放，造成内存泄漏。
	深拷贝不但对指针进行拷贝，而且对指针指向的内容进行拷贝，经深拷贝后的指针是指向两个不同地址的指针。
	
